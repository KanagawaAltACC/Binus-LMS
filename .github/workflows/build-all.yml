name: Build All Platforms

on:
  workflow_dispatch:

env:
  COSIGN_EXPERIMENTAL: 1  # Required for keyless signing

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        working-directory: Sources
        run: npm install

      - name: Build Windows App
        working-directory: Sources
        run: npm run dist:win

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Sign Windows Artifact
        working-directory: Sources/dist
        run: |
          for file in *.exe; do
            cosign sign-blob --yes "$file" --output-signature="$file.sig" --output-certificate="$file.cert"
          done

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: BinusLMS-Windows
          path: |
            Sources/dist/*.exe
            Sources/dist/*.sig
            Sources/dist/*.cert
          compression-level: 6

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        working-directory: Sources
        run: npm install

      - name: Build Linux App
        working-directory: Sources
        run: npm run dist

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Sign Linux Artifacts
        working-directory: Sources/dist
        run: |
          for file in *.AppImage *.deb; do
            cosign sign-blob --yes "$file" --output-signature="$file.sig" --output-certificate="$file.cert"
          done

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: BinusLMS-Linux
          path: |
            Sources/dist/*.AppImage
            Sources/dist/*.deb
            Sources/dist/*.sig
            Sources/dist/*.cert
          compression-level: 6

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        working-directory: Sources
        run: npm install

      - name: Build macOS App
        working-directory: Sources
        run: npm run dist:mac

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Sign macOS Artifact
        working-directory: Sources/dist
        run: |
          for file in *.dmg; do
            cosign sign-blob --yes "$file" --output-signature="$file.sig" --output-certificate="$file.cert"
          done

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: BinusLMS-macOS
          path: |
            Sources/dist/*.dmg
            Sources/dist/*.sig
            Sources/dist/*.cert
          compression-level: 6

  merge-artifacts:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: BinusLMS-Windows
          path: combined-build/windows

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v4
        with:
          name: BinusLMS-Linux
          path: combined-build/linux

      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: BinusLMS-macOS
          path: combined-build/macos

      - name: Upload Combined Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: BinusLMS-AllPlatforms
          path: combined-build/
          compression-level: 6